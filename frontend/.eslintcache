[{"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/index.js":"1","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/layouts/Admin.js":"2","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/layouts/Auth.js":"3","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/store/index.js":"4","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/routes.js":"5","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Navbars/AdminNavbar.js":"6","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Navbars/AuthNavbar.js":"7","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Footers/AdminFooter.js":"8","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Footers/AuthFooter.js":"9","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Sidebar/Sidebar.js":"10","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/middleware/api.js":"11","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/index.js":"12","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/NewAccount.js":"13","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/Index.js":"14","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Login.js":"15","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/AccountPage.js":"16","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/ExternalTransfer.js":"17","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Refund.js":"18","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Test_Table.js":"19","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Test.js":"20","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Register.js":"21","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/InternalTransfer.js":"22","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/customer.js":"23","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/accounts.js":"24","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/transactions.js":"25","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/actions/constants.js":"26","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/filter.js":"27","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/TableContainer.js":"28","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Headers/Header.js":"29","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/variables/charts.js":"30","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/TransactionComp.js":"31","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/AccountComp.js":"32","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/actions/index.js":"33","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/actions/asyncActionCreators.js":"34","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/actions/actionCreators.js":"35","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/formatMoney.js":"36","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/layouts/unauth.js":"37","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Navbars/UnAuthNavbar.js":"38","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Footers/UnAuthFooter.js":"39","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/getCustomer.js":"40","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/ManageAccount.js":"41","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Profile.js":"42","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Transactions.js":"43","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/getActiveAccounts.js":"44","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/getCustomers.js":"45","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/transactionsrange.js":"46","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/transactions18.js":"47","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/getInactiveAccounts.js":"48","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/transfer.js":"49"},{"size":1734,"mtime":1619333195699,"results":"50","hashOfConfig":"51"},{"size":2547,"mtime":1619333195699,"results":"52","hashOfConfig":"51"},{"size":2746,"mtime":1619333195699,"results":"53","hashOfConfig":"51"},{"size":394,"mtime":1619333195703,"results":"54","hashOfConfig":"51"},{"size":2888,"mtime":1619333195703,"results":"55","hashOfConfig":"51"},{"size":2798,"mtime":1619333195697,"results":"56","hashOfConfig":"51"},{"size":3248,"mtime":1619333195697,"results":"57","hashOfConfig":"51"},{"size":1393,"mtime":1619333195695,"results":"58","hashOfConfig":"51"},{"size":939,"mtime":1619333195696,"results":"59","hashOfConfig":"51"},{"size":7772,"mtime":1619333195698,"results":"60","hashOfConfig":"51"},{"size":2007,"mtime":1619333195700,"results":"61","hashOfConfig":"51"},{"size":1053,"mtime":1619333195702,"results":"62","hashOfConfig":"51"},{"size":4731,"mtime":1619333195706,"results":"63","hashOfConfig":"51"},{"size":7854,"mtime":1619333195704,"results":"64","hashOfConfig":"51"},{"size":4052,"mtime":1619333195705,"results":"65","hashOfConfig":"51"},{"size":2748,"mtime":1619333195704,"results":"66","hashOfConfig":"51"},{"size":6265,"mtime":1619333195705,"results":"67","hashOfConfig":"51"},{"size":3912,"mtime":1619333195706,"results":"68","hashOfConfig":"51"},{"size":1677,"mtime":1618808554118,"results":"69","hashOfConfig":"70"},{"size":6497,"mtime":1619333195706,"results":"71","hashOfConfig":"51"},{"size":9991,"mtime":1619333195706,"results":"72","hashOfConfig":"51"},{"size":6392,"mtime":1619333195705,"results":"73","hashOfConfig":"51"},{"size":670,"mtime":1619333195700,"results":"74","hashOfConfig":"51"},{"size":690,"mtime":1619333195700,"results":"75","hashOfConfig":"51"},{"size":568,"mtime":1619333195702,"results":"76","hashOfConfig":"51"},{"size":2827,"mtime":1619333195641,"results":"77","hashOfConfig":"51"},{"size":1256,"mtime":1618700530571,"results":"78","hashOfConfig":"70"},{"size":4045,"mtime":1618700530571,"results":"79","hashOfConfig":"70"},{"size":4841,"mtime":1619333195696,"results":"80","hashOfConfig":"51"},{"size":10727,"mtime":1619333195704,"results":"81","hashOfConfig":"51"},{"size":2800,"mtime":1619333195698,"results":"82","hashOfConfig":"51"},{"size":3076,"mtime":1619333195695,"results":"83","hashOfConfig":"51"},{"size":70,"mtime":1619333195641,"results":"84","hashOfConfig":"51"},{"size":6167,"mtime":1619333195640,"results":"85","hashOfConfig":"51"},{"size":1156,"mtime":1619333195640,"results":"86","hashOfConfig":"51"},{"size":288,"mtime":1619333195699,"results":"87","hashOfConfig":"51"},{"size":2764,"mtime":1619333195699,"results":"88","hashOfConfig":"51"},{"size":3009,"mtime":1619333195697,"results":"89","hashOfConfig":"51"},{"size":939,"mtime":1619333195696,"results":"90","hashOfConfig":"51"},{"size":557,"mtime":1619333195701,"results":"91","hashOfConfig":"51"},{"size":5608,"mtime":1619333195705,"results":"92","hashOfConfig":"51"},{"size":8315,"mtime":1619333195706,"results":"93","hashOfConfig":"51"},{"size":8819,"mtime":1619333195707,"results":"94","hashOfConfig":"51"},{"size":581,"mtime":1619333195701,"results":"95","hashOfConfig":"51"},{"size":561,"mtime":1619333195701,"results":"96","hashOfConfig":"51"},{"size":578,"mtime":1619333195702,"results":"97","hashOfConfig":"51"},{"size":572,"mtime":1619333195702,"results":"98","hashOfConfig":"51"},{"size":589,"mtime":1619333195702,"results":"99","hashOfConfig":"51"},{"size":559,"mtime":1619333195703,"results":"100","hashOfConfig":"51"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1okvlwy",{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tkolvr",{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/index.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/layouts/Admin.js",["220"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, {Component} from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\n\nconst Admin = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\n        -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n  return (\n    <>\n      <Sidebar\n        {...props}\n        routes={routes}\n        logo={{\n          innerLink: \"/admin/index\",\n          imgSrc: require(\"../assets/img/brand/logo1.png\").default,\n          imgAlt: \"...\",\n        }}\n      />\n      <div className=\"main-content\" ref={mainContent}>\n        <AdminNavbar\n          {...props}\n          brandText={getBrandText(props.location.pathname)}\n        />\n        <Switch>\n          {getRoutes(routes)}\n          <Redirect from=\"*\" to=\"/admin/Accounts\" />\n        </Switch>\n        <Container fluid>\n          <AdminFooter />\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Admin;\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/layouts/Auth.js",["221"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nconst Auth = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.body.classList.add(\"bg-default\");\n    return () => {\n      document.body.classList.remove(\"bg-default\");\n    };\n  }, []);\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"main-content\" ref={mainContent}>\n        <AuthNavbar />\n        <div className=\"header bg-gradient-info py-7 py-lg-8\">\n  \n          <div className=\"separator separator-bottom separator-skew zindex-100\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"none\"\n              version=\"1.1\"\n              viewBox=\"0 0 2560 100\"\n              x=\"0\"\n              y=\"0\"\n            >\n              <polygon\n                className=\"fill-default\"\n                points=\"2560 0 2560 100 0 100\"\n              />\n            </svg>\n          </div>\n        </div>\n        {/* Page content */}\n        <Container className=\"mt--8 pb-5\">\n          <Row className=\"justify-content-center\">\n            <Switch>\n              {getRoutes(routes)}\n              <Redirect from=\"*\" to=\"/auth/addaccount\" />\n            </Switch>\n          </Row>\n        </Container>\n      </div>\n      <AuthFooter />\n    </>\n  );\n};\n\nexport default Auth;\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/store/index.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/routes.js",["222"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Index from \"views/Index.js\";\nimport Register from \"views/examples/Register.js\";\nimport Login from \"views/examples/Login.js\";\nimport Accounts from \"views/examples/AccountPage.js\"\nimport NewAccount from \"views/examples/NewAccount.js\"\nimport ManageAccount from \"views/examples/ManageAccount.js\"\nimport Refund from \"views/examples/Refund.js\"\nimport InternalTransfer from \"views/examples/InternalTransfer.js\"\nimport ExternalTransfer from \"views/examples/ExternalTransfer.js\"\nimport Test from \"views/examples/Test.js\"\nimport Transactions from \"views/examples/Transactions.js\"\nimport Profile from \"views/examples/Profile.js\"\nvar routes = [\n  {\n    path: \"/Accounts\",\n    name: \"Account Summary\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Accounts,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/Register\",\n    name: \"Register\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Register,\n    layout: \"/unauth\",\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Login,\n    layout: \"/unauth\",\n  },\n  {\n    path: \"/addaccount\",\n    name: \"Add Account\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: NewAccount,\n    layout: \"/auth\",\n  },\n  {\n    path: \"/ManageAccount\",\n    name: \"Manage Account\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: ManageAccount,\n    layout: \"/auth\",\n  },\n  {\n    path: \"/refund\",\n    name: \"Refund\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Refund,\n    layout: \"/auth\",\n  },\n  {\n    path: \"/internaltransfer\",\n    name: \"Transfer\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: InternalTransfer,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/externaltransfer\",\n    name: \"Bill payment\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: ExternalTransfer,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/Transactions\",\n    name: \"Transactions\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Transactions,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/Profile\",\n    name: \"My Profile\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Profile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/Test\",\n    name: \"test\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Test,\n    layout: \"/auth\",\n  }\n];\nexport default routes;\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Navbars/AdminNavbar.js",["223","224","225","226","227","228"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Media,\n} from \"reactstrap\";\n\nconst AdminNavbar = (props) => {\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n        <Container fluid>\n          <Link\n            className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n            to=\"/\"\n          >\n            {props.brandText}\n          </Link>\n\n          <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n            <UncontrolledDropdown nav>\n              <DropdownToggle className=\"pr-0\" nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={\n                        require(\"../../assets/img/theme/user-login.png\")\n                          .default\n                      }\n                    />\n                  </span>\n                  <Media className=\"ml-2 d-none d-lg-block\">\n                  </Media>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/Profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Navbars/AuthNavbar.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Footers/AdminFooter.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Footers/AuthFooter.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Sidebar/Sidebar.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/middleware/api.js",["229"],"import fetch from 'isomorphic-fetch'\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\nconst apiResponse = response => {\n    return response.json().then(json => {\n        if (!response.ok) {\n            return Promise.reject(json)\n        }\n        return json\n    })\n}\n\nconst fetchOptions = (method, data) => {\n    return {\n        method,\n        body: JSON.stringify(data),\n        headers: new Headers({\n            'Content-Type': 'application/json; charset=utf-8'\n        })\n    }\n}\n\nconst callApi = (endpoint, method, data) => {\n    const fullUrl = (endpoint.indexOf(BASE_URL) === -1) ? BASE_URL + endpoint : endpoint\n    if (method) {\n        method = method.toUpperCase()\n        return fetch(fullUrl, fetchOptions(method, data)).then(apiResponse)\n    } else {\n        return fetch(fullUrl).then(apiResponse)\n    }\n}\n\nexport const CALL_API = 'Call API'\n\nexport default store => next => action => {\n    const callAPI = action[CALL_API]\n\n    if (typeof callAPI === 'undefined') {\n        return next(action)\n    }\n\n    const { endpoint, types, data, method } = callAPI\n\n    if (typeof endpoint !== 'string') {\n        throw new Error('Specify a string endpoint URL.')\n    }\n\n    if (!Array.isArray(types) || types.length !== 3) {\n        throw new Error('Expected an array of three action types.')\n    }\n\n    if (!types.every(type => typeof type === 'string')) {\n        throw new Error('Expected action types to be strings.')\n    }\n\n    const actionWith = data => {\n        const finalAction = Object.assign({}, action, data)\n        delete finalAction[CALL_API]\n        return finalAction\n    }\n\n    const [requestType, successType, failureType] = types\n    next(actionWith({ type: requestType }))\n\n    return callApi(endpoint, method, data).then(\n        response => next(actionWith({\n            response,\n            type: successType\n        })),\n        error => next(actionWith({\n            type: failureType,\n            error: error.message || 'Something bad happened'\n        }))\n    )\n}\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/index.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/NewAccount.js",["230","231","232","233","234","235","236","237"],"import React from \"react\";\nimport { connect } from 'react-redux'\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Col,Label, InputGroup, InputGroupAddon, InputGroupText\n} from \"reactstrap\";\n\nimport { submitCreateAccountRequest, fetchAllCustomers } from 'actions'\n\n\nclass ManageAccount extends React.Component{\n   \n  componentDidMount() {\n    const { dispatch, authenticated, customers } = this.props\n    dispatch(fetchAllCustomers());\n}\n\n    constructor(props) {\n      super(props);\n      this.state = {Username:\"\" , Account_Type:\"\", Balance:0,\n                    everFocusedUsername: false,\n                    everFocusedAccountType: false,\n                    everFocusedBalance: false,\n                    inFocus: \"\"\n    }\n\n      this.handleUsernameUpdate = this.handleUsernameUpdate.bind(this);\n      this.handleAccountTypeUpdate = this.handleAccountTypeUpdate.bind(this);\n      this.handleBalanceUpdate = this.handleBalanceUpdate.bind(this);\n\n      this.handleSubmitAll = this.handleSubmitAll.bind(this);\n    }\n\n  handleSubmitAll(event) {\n    const { dispatch, account } = this.props\n\n    event.preventDefault();\n\n    let Username = this.state.Username\n    let Account_Type = this.state.Account_Type\n    let Balance = this.state.Balance\n    \n    dispatch(submitCreateAccountRequest(Username,Account_Type,Balance));\n\n    alert(Account_Type+' account created successfully!');\n\n  }\n\n\thandleUsernameUpdate = (evt) => {\n\t\tthis.setState({Username: evt.target.value});\n\t}\n\thandleAccountTypeUpdate = (evt) => {\n\t\tthis.setState({Account_Type: evt.target.value});\n\t}\n  handleBalanceUpdate = (evt) => {\n\t\tthis.setState({Balance: evt.target.value});\n\t}\n\n    render() {\n        const { dispatch, authenticated, getCustomers, account } = this.props\n   \n        return (\n          <Col lg=\"5\" md=\"7\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader>\n              <large>Add New Account</large>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n            <div className=\"text-center text-muted mb-4\">\n              <br/>\n              \n              <Form role=\"form\" id='regForm'>\n\n                  <FormGroup>\n                        <Label for=\"exampleSelect\">Username</Label>\n                        <Input type=\"select\"  name=\"select\" id=\"exampleSelect\" value={this.state.Username} onChange={this.handleUsernameUpdate}>\n                         {getCustomers.customers\n                                      ? getCustomers.customers.map(cust => {\n                                          return <option key={cust.Cust_UUID} value={cust.Cust_UUID}>{cust.Username}</option>;\n                                        })\n                                      : \"Username loading..\"}\n                        \n                        </Input>\n                      </FormGroup>\n                      <FormGroup>\n                        <Label for=\"exampleSelect\">Account Type</Label>\n                        <Input type=\"select\"  name=\"select\" id=\"exampleSelect\" value={this.state.Account_Type} onChange={this.handleAccountTypeUpdate}>\n                          <option>Checking</option>\n                          <option>Savings</option>\n                        </Input>\n                      </FormGroup>\n                      <FormGroup className=\"mb-3\">\n                        <InputGroup className=\"input-group-alternative\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"ni ni-credit-card\"  />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input onChange={this.handleBalanceUpdate}\n                            placeholder=\"Balance in USD\"\n                            type=\"Amount\"\n                            autoComplete=\"Amount\"\n                            />\n                        </InputGroup>\n                      </FormGroup>                  \n                  <div className=\"text-center\">\n                    <button type=\"submit\" className=\"btn btn-md btn-warning\" onClick={this.handleSubmitAll}>\n                      Add account\n                    </button>\n                  </div>\n                </Form>\n\t\n            </div>\n            </CardBody>\n          </Card>\n        </Col>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const { getCustomers,account} = state\n    return {\n        isFetching: account.isFetching,\n        getCustomers: getCustomers.items\n\n    }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n      dispatch\n  }\n}\nexport default connect(mapStateToProps)(ManageAccount)\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/Index.js",["238"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2,\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\n\nconst Index = (props) => {\n  const [activeNav, setActiveNav] = useState(1);\n  const [chartExample1Data, setChartExample1Data] = useState(\"data1\");\n\n  if (window.Chart) {\n    parseOptions(Chart, chartOptions());\n  }\n\n  const toggleNavs = (e, index) => {\n    e.preventDefault();\n    setActiveNav(index);\n    setChartExample1Data(\"data\" + index);\n  };\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        <Row>\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n            <Card className=\"bg-gradient-default shadow\">\n              <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                      Overview\n                    </h6>\n                    <h2 className=\"text-white mb-0\">Account Summary</h2>\n                  </div>\n                  <div className=\"col\">\n                    <Nav className=\"justify-content-end\" pills>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 1,\n                          })}\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 1)}\n                        >\n                          <span className=\"d-none d-md-block\">Month</span>\n                          <span className=\"d-md-none\">M</span>\n                        </NavLink>\n                      </NavItem>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 2,\n                          })}\n                          data-toggle=\"tab\"\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 2)}\n                        >\n                          <span className=\"d-none d-md-block\">Week</span>\n                          <span className=\"d-md-none\">W</span>\n                        </NavLink>\n                      </NavItem>\n                    </Nav>\n                  </div>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                {/* Chart */}\n                <div className=\"chart\">\n                  <Line\n                    data={chartExample1[chartExample1Data]}\n                    options={chartExample1.options}\n                    getDatasetAtEvent={(e) => console.log(e)}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xl=\"4\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                      Credit(%)\n                    </h6>\n                    <h2 className=\"mb-0\">Total Monthly Balance</h2>\n                  </div>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                {/* Chart */}\n                <div className=\"chart\">\n                  <Bar\n                    data={chartExample2.data}\n                    options={chartExample2.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row className=\"mt-5\">\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Checkings transactions</h3>\n                  </div>\n                  <div className=\"col text-right\">\n                    <Button\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      See all\n                    </Button>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Date</th>\n                    <th scope=\"col\">Description</th>\n                    <th scope=\"col\">Comments</th>\n                    <th scope=\"col\">Amount</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">-</th>\n                    <td>-</td>\n                    <td>-</td>\n                    <td>\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 46,530\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          </Col>\n          <Col xl=\"4\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Savings transactions</h3>\n                  </div>\n                  <div className=\"col text-right\">\n                    <Button\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      See all\n                    </Button>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Date</th>\n                    <th scope=\"col\">Description</th>\n                    <th scope=\"col\">Comments</th>\n                    <th scope=\"col\">Amount</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">-</th>\n                    <td>-</td>\n                    <td>-</td>\n                    <td>\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 46,530\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Index;\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Login.js",["239","240","241"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nclass Login extends React.Component\n{\nstate = {\n\t\tusers: [],\n    Status:''\n\t}\n\n\tcreateNewUser = (user) => {\n\t\n    \n\t}\n\n  render() {\n    return (\n\n              <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                  <CardHeader>\n                    <large>Sign In</large>\n                  </CardHeader>\n                  <CardBody className=\"px-lg-5 py-lg-5\">\n                  <div className=\"text-center text-muted mb-4\">\n                    <br/>\n                    <ToggleableUserForm\n                      onuserCreate={this.createNewUser}\n                    />\n                  </div>\n                  </CardBody>\n                </Card>\n              </Col>\n    );\n  };\n}\n\n\nclass ToggleableUserForm extends React.Component {\n\tstate = {\n\t\tinCreateMode: false\n\t}\n\thandleCreateClick = () => {\n\t\tthis.setState({inCreateMode: true});\n\t}\n\tleaveCreateMode = () => {\n\t\tthis.setState({inCreateMode: false});\n\t}\n\thandleCancleClick = () => {\n\t\tthis.leaveCreateMode();\n\t}\n\thandleFormSubmit = (user) => {\n\t\tthis.leaveCreateMode();\n\t\tthis.props.onuserCreate(user);\n\t}\n\trender() {\n\t\t\treturn (\n\t\t\t\t<div className=\"mb-3 p-4\" style={{boxShadow: '0 0 10px #ccc'}} >\n\t\t\t\t\t<UserForm\n\t\t\t\t\t\tonFormSubmit={this.handleFormSubmit}\n          ></UserForm>\n\t\t\t\t</div>\n\n\t\t\t)\n\n\t}\n}\n\nclass UserForm extends React.Component {\n\tstate = {\n    \"Password\": this.props.Password || '',\n\t\t\"Username\": this.props.Username || '',\n\t}\n\n\thandleFormSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tthis.props.onFormSubmit({...this.state});\n\t}\n\thandleUsernameUpdate = (evt) => {\n\t\tthis.setState({Username: evt.target.value});\n\t}\n  handlePasswordUpdate = (evt) => {\n\t\tthis.setState({Password: evt.target.value});\n\t}\n\n\trender() {\n\t\tconst buttonText = 'Login';\n\t\treturn (\n      <Form role=\"form\" id='regForm' onSubmit={this.handleFormSubmit}>\n   \n      <FormGroup className=\"mb-3\">\n          <InputGroup className=\"input-group-alternative\">\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <i className=\"ni ni-single-02\" />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              placeholder=\"Username\"\n              type=\"Username\"\n              autoComplete=\"Username\"\n                value={this.state.Username} onChange={this.handleUsernameUpdate}\n              />\n          </InputGroup>\n        </FormGroup>\n      \n        <FormGroup className=\"mb-3\">\n          <InputGroup className=\"input-group-alternative\">\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <i className=\"ni ni-lock-circle-open\" />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              placeholder=\"Password\"\n              type=\"password\"\n              autoComplete=\"new-password\"\n                value={this.state.Password} onChange={this.handlePasswordUpdate}\n              />\n          </InputGroup>\n        </FormGroup>\n        \n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-md btn-warning\">\n\t\t\t\t\t\t{buttonText}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n      </Form>\n\t\t)\n\t}\n}\n\nexport default Login;\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/AccountPage.js",["242","243","244"],"\nimport React, { Component } from 'react'\nimport AccountComp from 'components/AccountComp'\nimport { connect } from 'react-redux'\nimport { fetchAccounts,fetchCustomers } from 'actions'\nimport {\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst style = {\n    float: 'right'\n}\n\nclass AccountsPage extends Component {\n\n    componentDidMount() {\n\n        const { dispatch, authenticated } = this.props\n        const custid = '750f7a8b-5d4f-4621-92f3-2b4d0d031532';\n        dispatch(fetchCustomers(custid));\n        dispatch(fetchAccounts(custid));\n\n    }\n\n\n    render() {\n        const { accounts,getCustomer } = this.props\n\n\n        return (\n                <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n                  <Container fluid>\n                      <Row>\n                        <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n                          <Card className=\"bg-gradient-default shadow\">\n                            <CardHeader className=\"bg-transparent\">\n                              <Row className=\"align-items-center\">\n                                <div className=\"col\">\n                                  <h4 className=\"text-white mb-0\">\n                                    Hello &nbsp;&nbsp;\n                                    {getCustomer.customer\n                                      ? getCustomer.customer.map(cust => {\n                                          return <b key={cust.Cust_UUID}>{cust.First_Name} {cust.Last_Name} !</b>;\n                                        })\n                                      : \"Username loading..\"}\n                                  </h4>\n                                </div>\n                              </Row>\n                            </CardHeader>\n                          </Card>\n                        </Col>\n                      </Row>\n                      <br/>\n                      <Row>\n                        <Col>\n                          {accounts.accounts\n                              ? accounts.accounts.map(account => {\n                                  return (<AccountComp key={account.Customer_ID} {...account} />);\n                                })\n                              : \"Balance loading..\"}\n                        </Col>\n                      </Row>\n                  </Container>\n                </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    const { accounts, getCustomer, login } = state\n    return {\n        isFetching: accounts.isFetching,\n        accounts: accounts.items,\n        getCustomer:getCustomer.items\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatch\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountsPage)\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/ExternalTransfer.js",["245","246","247","248","249","250","251","252"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { connect } from 'react-redux'\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n  Label\n} from \"reactstrap\";\n\nimport { extTransfer, fetchAccounts } from 'actions'\n\nclass ExternalTransfer extends React.Component\n{\n  componentDidMount() {\n    const { dispatch, authenticated, accounts,extTransfer } = this.props\n    \n    const custid = '750f7a8b-5d4f-4621-92f3-2b4d0d031532';\n    dispatch(fetchAccounts(custid));\n}\n\n    constructor(props) {\n      super(props);\n      this.state = { Source_Account_Num: 1234, Dest_Account_Num: 1234, Amount: 0, Details: \"Testing Send\",\n                    everFocusedAccountType: false,\n                    inFocus: \"\"\n    }\n      this.handleBalanceUpdate = this.handleBalanceUpdate.bind(this);\n\n      this.handleSrcAccNumberUpdate = this.handleSrcAccNumberUpdate.bind(this);\n      this.handleDestAccNumberUpdate = this.handleDestAccNumberUpdate.bind(this);\n\n      this.handleTransfer = this.handleTransfer.bind(this);\n    }\n\n    handleTransfer(event) {\n    const { dispatch } = this.props\n\n    event.preventDefault();\n\n    let Source_Account_Num = this.state.Source_Account_Num\n    let Dest_Account_Num = this.state.Dest_Account_Num\n    let Amount = parseInt(this.state.Amount)\n    let Details = \"Internal transfer\"\n\n    dispatch(extTransfer(Source_Account_Num,Dest_Account_Num,Amount,Details));\n    \n    alert(\"Transfer successful !\");\n\n  }\n\n\n\thandleSrcAccNumberUpdate = (evt) => {\n\t\tthis.setState({Source_Account_Num: evt.target.value});\n\t}\n\n  handleDestAccNumberUpdate = (evt) => {\n\t\tthis.setState({Dest_Account_Num: evt.target.value});\n\t}\n\n  handleBalanceUpdate = (evt) => {\n\t\tthis.setState({Amount: evt.target.value});\n\t}\n\n\n\n  render() {\n    const { accounts } = this.props\n    const buttonText = 'Transfer';\n    return (\n          <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n              <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                  <CardBody className=\"px-lg-5 py-lg-5\">\n                  <div className=\"text-center text-muted mb-4\">\n                    <Form>\n                      <FormGroup>\n                        <Label for=\"exampleSelect\">From</Label>\n                          <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onLoad={this.handleSrcAccNumberUpdate} onChange={this.handleSrcAccNumberUpdate}>\n                                          {accounts.accounts\n                                            ? accounts.accounts.map(acct => {\n                                                return (<option key={acct.Account_Number} value={acct.Account_Number}>{acct.Account_Type}</option>);\n                                              })\n                                            : \"Accounts loading..\"}\n                          </Input>\n                      </FormGroup>\n                      <FormGroup>\n                        <Label for=\"exampleSelect\">To</Label>\n                          <Input type=\"select\" name=\"select\" id=\"exampleSelect1\" onLoad={this.handleDestAccNumberUpdate} onChange={this.handleDestAccNumberUpdate}>\n                              <option value=\"12\">Internet</option>\n                              <option value=\"123\">Disney Subscription</option>\n                              <option value=\"1234\">School fee</option>\n                              <option value=\"12345\">Utility</option>\n                              <option value=\"123456\">Electricity</option>\n                            </Input>\n                      </FormGroup>\n                      <FormGroup className=\"mb-3\">\n                        <InputGroup className=\"input-group-alternative\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"ni ni-credit-card\"  />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input  onChange={this.handleBalanceUpdate}\n                            placeholder=\"Amount in USD\"\n                            type=\"Amount\"\n                            autoComplete=\"Amount\"\n                            />\n                        </InputGroup>\n                      </FormGroup>\n\n                      <FormGroup className=\"mb-3\">\n                        <InputGroup>\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <Input addon type=\"checkbox\" aria-label=\"\" />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input placeholder=\"Check if recurring transfer\" />\n                        </InputGroup>\n                      </FormGroup>\n\n                      <div className=\"text-center\">\n                        <button type=\"submit\" className=\"btn btn-md btn-primary\" onClick={this.handleTransfer}>\n                          {buttonText}\n                        </button>\n                      </div>\n                      </Form>\n                  </div>\n                  </CardBody>\n                </Card>\n              </Col>\n          </div>\n    );\n  };\n}\n\n\nconst mapStateToProps = state => {\n  const { accounts, extTransfer } = state\n  return {\n      isFetching: accounts.isFetching,\n      accounts: accounts.items,\n      // extTransfer: extTransfer.items\n  }\n}\nconst mapDispatchToProps = dispatch => {\nreturn {\n    dispatch\n}\n}\nexport default connect(mapStateToProps)(ExternalTransfer)\n\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Refund.js",["253","254","255","256","257","258"],"import React from \"react\";\nimport { connect } from 'react-redux'\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Col,Label,InputGroup, InputGroupAddon, InputGroupText\n} from \"reactstrap\";\n\nimport { submitRefund, fetchActiveAccounts } from 'actions'\n\nclass Refund extends React.Component{\n   \n  componentDidMount() {\n    const { dispatch, authenticated, getActiveAccounts,refund } = this.props\n    dispatch(fetchActiveAccounts());\n}\n\n    constructor(props) {\n      super(props);\n      this.state = {Account_Num:\"\", Amount:0,\n                    everFocusedAccountType: false,\n                    inFocus: \"\"\n    }\n      this.handleBalanceUpdate = this.handleBalanceUpdate.bind(this);\n\n      this.handleActiveAccNumberUpdate = this.handleActiveAccNumberUpdate.bind(this);\n\n      this.handleRefund = this.handleRefund.bind(this);\n    }\n\n    handleRefund(event) {\n    const { dispatch } = this.props\n\n    event.preventDefault();\n\n    let Account_Num = this.state.Account_Number\n    let Amount = this.state.Amount\n\n    dispatch(submitRefund(Account_Num,parseInt(Amount)));\n    \n    alert(\"Refund successful to account number: \"+ Account_Num+\" !\");\n\n  }\n\n\n\thandleActiveAccNumberUpdate = (evt) => {\n\t\tthis.setState({Account_Number: evt.target.value});\n\t}\n\n  handleBalanceUpdate = (evt) => {\n\t\tthis.setState({Amount: evt.target.value});\n\t}\n\n\n    render() {\n        const { getActiveAccounts } = this.props\n   \n        return (\n          <Col lg=\"5\" md=\"7\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader>\n              <large>Refund</large>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n            <div className=\"text-center text-muted mb-4\">\n              <Form role=\"form\" id='regForm'>\n                  <FormGroup>\n                        <Label for=\"exampleSelect\">Account</Label>\n                        <Input type=\"select\"  name=\"select\" id=\"exampleSelect\" value={this.state.Account_Number} onChange={this.handleActiveAccNumberUpdate}>\n                         {getActiveAccounts.accounts\n                                      ? getActiveAccounts.accounts.map(acct => {\n                                          return (<option key={acct.Account_Number} value={acct.Account_Number}>{acct.Account_Number}</option>);\n                                        })\n                                      : \"Accounts loading..\"}\n                        \n                        </Input>\n                  </FormGroup> \n                  <FormGroup className=\"mb-3\">\n                        <InputGroup className=\"input-group-alternative\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"ni ni-credit-card\"  />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input onChange={this.handleBalanceUpdate}\n                            placeholder=\"Balance in USD\"\n                            type=\"Amount\"\n                            autoComplete=\"Amount\"\n                            />\n                        </InputGroup>\n                  </FormGroup>                       \n                  <button type=\"submit\" className=\"btn btn-md btn-warning\" onClick={this.handleRefund}>\n                      Refund\n                  </button> \n                </Form>\n\t\n            </div>\n            </CardBody>\n          </Card>\n        </Col>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const { refund, getActiveAccounts } = state\n    return {\n        isFetching: getActiveAccounts.isFetching,\n        getActiveAccounts: getActiveAccounts.items,\n        // refund: refund.items\n    }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n      dispatch\n  }\n}\nexport default connect(mapStateToProps)(Refund)\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Test_Table.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Test.js",["259","260","261","262"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nclass Test extends React.Component\n{\nstate = {\n\t\tusers: []\n\t}\n\n\tcreateNewUser = (user) => {\n\t\tfetch('http://localhost:8000/account/api/CreateCustomer', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(user),\n\t\t}).then(response => response.json())\n\t\t.then(user => {\n\t\t\tthis.setState({users: this.state.users.concat([user])});\n\t\t});\n\t}\n\n  render() {\n    return (\n      <>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n          <CardBody className=\"px-lg-5 py-lg-5\">\n          <div className=\"text-center text-muted mb-4\">\n            <large>User login</large>\n            <ToggleableUserForm\n              onuserCreate={this.createNewUser}\n            />\n          </div>\n          </CardBody>\n        </Card>\n      </Col>\n      </>\n    );\n  };\n}\n\n\nclass ToggleableUserForm extends React.Component {\n\tstate = {\n\t\tinCreateMode: false\n\t}\n\thandleCreateClick = () => {\n\t\tthis.setState({inCreateMode: true});\n\t}\n\tleaveCreateMode = () => {\n\t\tthis.setState({inCreateMode: false});\n\t}\n\thandleCancleClick = () => {\n\t\tthis.leaveCreateMode();\n\t}\n\thandleFormSubmit = (user) => {\n\t\tthis.leaveCreateMode();\n\t\tthis.props.onuserCreate(user);\n\t}\n\trender() {\n\t\t\treturn (\n\t\t\t\t<div className=\"mb-3 p-4\" style={{boxShadow: '0 0 10px #ccc'}} >\n\t\t\t\t\t<UserForm\n\t\t\t\t\t\tonFormSubmit={this.handleFormSubmit}\n          ></UserForm>\n\t\t\t\t</div>\n\n\t\t\t)\n\n\t}\n}\n\nclass UserForm extends React.Component {\n\tstate = {\n\t\t\"First_Name\": this.props.First_Name || '',\n\t\t\"Last_Name\": this.props.Last_Name || '',\n\t\t\"Username\": this.props.Username || '',\n    \"Email\": this.props.Email || '',\n    \"Password\": this.props.Password || '',\n    \"Total_Accounts\": parseInt(this.props.Total_Accounts) || ''\n\t}\n\n\thandleFormSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tthis.props.onFormSubmit({...this.state});\n\t}\n\thandleFirstNameUpdate = (evt) => {\n\t\tthis.setState({First_Name: evt.target.value});\n\t}\n\thandleLastNameUpdate = (evt) => {\n\t\tthis.setState({Last_Name: evt.target.value});\n\t}\n\thandleUsernameUpdate = (evt) => {\n\t\tthis.setState({Username: evt.target.value});\n\t}\n  handleEmailUpdate = (evt) => {\n\t\tthis.setState({Email: evt.target.value});\n\t}\n  handlePasswordUpdate = (evt) => {\n\t\tthis.setState({Password: evt.target.value});\n\t}\n  handleTotalAccountsUpdate = (evt) => {\n\t\tthis.setState({Total_Accounts: evt.target.value});\n\t}\n\n\trender() {\n\t\tconst buttonText = 'Sign In';\n\t\treturn (\n      <Form role=\"form\" onSubmit={this.handleFormSubmit}>\n      <FormGroup className=\"mb-3\">\n        <InputGroup className=\"input-group-alternative\">\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>\n              <i className=\"ni ni-user-04\" />\n            </InputGroupText>\n          </InputGroupAddon>\n          <Input\n            placeholder=\"Firstname\"\n            type=\"Firstname\"\n            autoComplete=\"Firstname\"\n            value={this.state.First_Name} onChange={this.handleFirstNameUpdate}\n          />\n        </InputGroup>\n\n      </FormGroup>\n      <FormGroup className=\"mb-3\">\n        <InputGroup className=\"input-group-alternative\">\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>\n              <i className=\"ni ni-user-04\" />\n            </InputGroupText>\n          </InputGroupAddon>\n          <Input\n            placeholder=\"Lastname\"\n            type=\"Lastname\"\n            autoComplete=\"Lastname\"\n            value={this.state.Last_Name} onChange={this.handleLastNameUpdate}\n          />\n        </InputGroup>\n\n      </FormGroup>\n        <FormGroup className=\"mb-3\">\n          <InputGroup className=\"input-group-alternative\">\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <i className=\"ni ni-email-83\" />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              placeholder=\"Email\"\n              type=\"email\"\n              autoComplete=\"new-email\"\n              value={this.state.Email} onChange={this.handleEmailUpdate}\n            />\n          </InputGroup>\n\n        </FormGroup>\n        <FormGroup className=\"mb-3\">\n          <InputGroup className=\"input-group-alternative\">\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <i className=\"ni ni-lock-circle-open\" />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              placeholder=\"Password\"\n              type=\"password\"\n              autoComplete=\"new-password\"\n                value={this.state.Password} onChange={this.handlePasswordUpdate}\n              />\n          </InputGroup>\n        </FormGroup>\n\n        <FormGroup>\n\t\t\t\t\t<textarea className=\"form-control\" placeholder=\"user Description\"\n\t\t\t\t\t\trows=\"5\" value={this.state.Username}\n\t\t\t\t\t\tonChange={this.handleUsernameUpdate}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.state.Username}\n\t\t\t\t\t</textarea>\n        </FormGroup>\n\n        <FormGroup>\n        <InputGroup className=\"input-group-alternative\">\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>\n              <i className=\"ni ni-email-83\" />\n            </InputGroupText>\n          </InputGroupAddon>\n          <Input\n            placeholder=\"Total_accounts\"\n            type=\"Total_accounts\"\n            autoComplete=\"Total_accounts\"\n            value={this.state.Total_Accounts} onChange={this.handleTotalAccountsUpdate}\n          />\n        </InputGroup>\n        </FormGroup>\n\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-md btn-primary\">\n\t\t\t\t\t\t{buttonText}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n      </Form>\n\t\t)\n\t}\n}\n\nexport default Test;\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Register.js",["263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281"],"import React from \"react\";\nimport { connect } from 'react-redux'\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nimport { submitCreateCustomerRequest } from 'actions'\n\nfunction validate(First_Name,Last_Name, Email, Password,Username, Total_Accounts) {\n  // true means invalid, so our conditions got reversed\n  return {\n    First_Name: First_Name.length === 0,\n    Last_Name: Last_Name.length === 0,\n    Email: Email.length === 0,\n    Password: Password.length === 0,\n    Username: Username.length === 0,\n    Total_Accounts: Total_Accounts.length === 0\n  };\n}\n\nclass Register extends React.Component{\n   \n  componentDidMount() {\n\n    const { dispatch, authenticated, customer,\n      First_NameValidationMessage,\n      Last_NameValidationMessage,\n      Username_NameValidationMessage,\n      Email_NameValidationMessage,\n      TotalAccounts_NameValidationMessage } = this.props\n\n}\n\n    constructor(props) {\n      super(props);\n      this.state = {First_Name:\"\" , Last_Name:\"\", Username:\"\", Email:\"\", Password:\"\", Total_Accounts:\"\",\n  \n                    everFocusedEmail: false,\n                    everFocusedPassword: false,\n                    everFocusedFirstname: false,\n                    everFocusedLastname: false,\n                    everFocusedUsername: false,\n                    everFocusedTotalAccounts: false,\n                    inFocus: \"\"\n    }\n\n      this.handleLastNameUpdate = this.handleLastNameUpdate.bind(this);\n      this.handleFirstNameUpdate = this.handleFirstNameUpdate.bind(this);\n      this.handleSubmitAll = this.handleSubmitAll.bind(this);\n      this.handleUsernameUpdate = this.handleUsernameUpdate.bind(this);\n      this.handleEmailUpdate = this.handleEmailUpdate.bind(this);\n      this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n      this.handleTotalAccountsUpdate = this.handleTotalAccountsUpdate.bind(this);\n    }\n\n  handleSubmitAll(event) {\n    const { dispatch } = this.props\n\n    event.preventDefault();\n\n    if (!this.canBeSubmitted()) {\n      event.preventDefault();\n      return;\n    }\n\n    let First_Name = this.state.First_Name\n    let Last_Name = this.state.Last_Name\n    let Username = this.state.Username\n    let Email = this.state.Email\n    let Password = this.state.Password\n    let Total_Accounts = this.state.Total_Accounts\n    \n    dispatch(submitCreateCustomerRequest(First_Name,Last_Name,Email,Password,Username,Total_Accounts));\n\n    alert('User registered successfully!');\n\n    setTimeout(this.props.history.push('unauth/login'), 3000);\n\n  }\n\n  canBeSubmitted() {\n    const errors = validate(this.state.First_Name,this.state.Last_Name,this.state.Email, this.state.Password,this.state.Username, this.state.Total_Accounts);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n    return !isDisabled;\n  }\n\n\thandleFirstNameUpdate = (evt) => {\n\t\tthis.setState({First_Name: evt.target.value});\n\t}\n\thandleLastNameUpdate = (evt) => {\n\t\tthis.setState({Last_Name: evt.target.value});\n\t}\n\thandleUsernameUpdate = (evt) => {\n\t\tthis.setState({Username: evt.target.value});\n\t}\n  handleEmailUpdate = (evt) => {\n\t\tthis.setState({Email: evt.target.value});\n\t}\n  handlePasswordUpdate = (evt) => {\n\t\tthis.setState({Password: evt.target.value});\n\t}\n  handleTotalAccountsUpdate = (evt) => {\n\t\tthis.setState({Total_Accounts: evt.target.value});\n\t}\n\n    render() {\n        const { dispatch, authenticated, customer,\n        First_NameValidationMessage,\n        Last_NameValidationMessage,\n        Username_NameValidationMessage,\n        Email_NameValidationMessage,\n        TotalAccounts_NameValidationMessage } = this.props\n\n        const errors = validate(this.state.First_Name,this.state.Last_Name,this.state.Email, this.state.Password,this.state.Username, this.state.Total_Accounts);\n        const isDisabled = Object.keys(errors).some(x => errors[x]);\n   \n        return (\n          <Col lg=\"5\" md=\"7\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader>\n              <large>Sign Up</large>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n            <div className=\"text-center text-muted mb-4\">\n              <br/>\n              \n              <Form role=\"form\" id='regForm'>\n                <FormGroup className=\"mb-3\">\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-circle-08\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input\n                      className={errors.First_Name ? \"error\" : \"\"}\n                      placeholder=\"Firstname\"\n                      type=\"Firstname\"\n                      autoComplete=\"Firstname\"\n                      value={this.state.First_Name} onChange={this.handleFirstNameUpdate}\n                    />\n                  </InputGroup>\n\n                </FormGroup>\n                <FormGroup className=\"mb-3\">\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-circle-08\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input\n                      className={errors.Last_Name ? \"error\" : \"\"}\n                      placeholder=\"Lastname\"\n                      type=\"Lastname\"\n                      autoComplete=\"Lastname\"\n                      value={this.state.Last_Name} onChange={this.handleLastNameUpdate}\n                    />\n                  </InputGroup>\n\n                </FormGroup>\n                  <FormGroup className=\"mb-3\">\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-email-83\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        className={errors.Email ? \"error\" : \"\"}\n                        placeholder=\"Email\"\n                        type=\"email\"\n                        autoComplete=\"new-email\"\n                        value={this.state.Email} onChange={this.handleEmailUpdate}\n                      />\n                    </InputGroup>\n\n                  </FormGroup>\n                  <FormGroup className=\"mb-3\">\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-lock-circle-open\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        className={errors.Password ? \"error\" : \"\"}\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        autoComplete=\"new-password\"\n                          value={this.state.Password} onChange={this.handlePasswordUpdate}\n                        />\n                    </InputGroup>\n                  </FormGroup>\n\n                  <FormGroup className=\"mb-3\">\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-single-02\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        className={errors.Username ? \"error\" : \"\"}\n                        placeholder=\"Username\"\n                        type=\"Username\"\n                        autoComplete=\"Username\"\n                          value={this.state.Username} onChange={this.handleUsernameUpdate}\n                        />\n                    </InputGroup>\n                  </FormGroup>\n\n                  <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-single-copy-04\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input\n                      className={errors.Total_Accounts ? \"error\" : \"\"}\n                      placeholder=\"Total_accounts\"\n                      type=\"Total_accounts\"\n                      autoComplete=\"Total_accounts\"\n                      value={this.state.Total_Accounts} onChange={this.handleTotalAccountsUpdate}\n                    />\n                  </InputGroup>\n                  </FormGroup>\n                  <div className=\"text-center\">\n                    <button disabled={isDisabled} type=\"submit\" className=\"btn btn-md btn-warning\" onClick={this.handleSubmitAll}>\n                      Register\n                    </button>\n                  </div>\n                </Form>\n\t\n            </div>\n            </CardBody>\n          </Card>\n        </Col>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const { customer } = state\n    return {\n        isFetching: customer.isFetching,\n        customer: customer.items,\n        First_NameValidationMessage: customer.First_NameValidationMessage,\n        Last_NameValidationMessage: customer.Last_NameValidationMessage,\n        Email_NameValidationMessage: customer.Email_NameValidationMessage,\n        Username_NameValidationMessage: customer.Username_NameValidationMessage,\n        TotalAccounts_NameValidationMessage: customer.TotalAccounts_NameValidationMessage,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n      dispatch\n  }\n}\nexport default connect(mapStateToProps)(Register)","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/InternalTransfer.js",["282","283","284","285","286","287","288","289","290"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { connect } from 'react-redux'\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n  Label\n} from \"reactstrap\";\n\nimport { fundTransfer, fetchAccounts } from 'actions'\nimport transfer from \"reducers/transfer\";\n\nclass InternalTransfer extends React.Component\n{\n  componentDidMount() {\n    const { dispatch, authenticated, accounts,transfer } = this.props\n    \n    const custid = '750f7a8b-5d4f-4621-92f3-2b4d0d031532';\n    dispatch(fetchAccounts(custid));\n}\n\n    constructor(props) {\n      super(props);\n      this.state = { Source_Account_Num: 1234, Dest_Account_Num: 1234, Amount: 0, Details: \"Testing Send\",\n                    everFocusedAccountType: false,\n                    inFocus: \"\"\n    }\n      this.handleBalanceUpdate = this.handleBalanceUpdate.bind(this);\n\n      this.handleSrcAccNumberUpdate = this.handleSrcAccNumberUpdate.bind(this);\n      this.handleDestAccNumberUpdate = this.handleDestAccNumberUpdate.bind(this);\n\n      this.handleTransfer = this.handleTransfer.bind(this);\n    }\n\n    handleTransfer(event) {\n    const { dispatch } = this.props\n\n    event.preventDefault();\n\n    let Source_Account_Num = this.state.Source_Account_Num\n    let Dest_Account_Num = this.state.Dest_Account_Num\n    let Amount = parseInt(this.state.Amount)\n    let Details = \"Internal transfer\"\n\n    dispatch(fundTransfer(Source_Account_Num,Dest_Account_Num,Amount,Details));\n    \n    alert(\"Transfer successful to account number: \"+ Dest_Account_Num+\" !\");\n\n  }\n\n\n\thandleSrcAccNumberUpdate = (evt) => {\n\t\tthis.setState({Source_Account_Num: evt.target.value});\n\t}\n\n  handleDestAccNumberUpdate = (evt) => {\n\t\tthis.setState({Dest_Account_Num: evt.target.value});\n\t}\n\n  handleBalanceUpdate = (evt) => {\n\t\tthis.setState({Amount: evt.target.value});\n\t}\n\n\n\n  render() {\n    const { accounts } = this.props\n    const buttonText = 'Transfer';\n    return (\n          <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n              <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                  <CardBody className=\"px-lg-5 py-lg-5\">\n                  <div className=\"text-center text-muted mb-4\">\n                    <Form>\n                      <FormGroup>\n                        <Label for=\"exampleSelect\">From</Label>\n                          <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onLoad={this.handleSrcAccNumberUpdate} onChange={this.handleSrcAccNumberUpdate}>\n                                          {accounts.accounts\n                                            ? accounts.accounts.map(acct => {\n                                                return (<option key={acct.Account_Number} value={acct.Account_Number}>{acct.Account_Type}</option>);\n                                              })\n                                            : \"Accounts loading..\"}\n                          </Input>\n                      </FormGroup>\n                      <FormGroup>\n                        <Label for=\"exampleSelect\">To</Label>\n                          <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onLoad={this.handleDestAccNumberUpdate} onChange={this.handleDestAccNumberUpdate}>\n                                            {accounts.accounts\n                                              ? accounts.accounts.map(acct => {\n                                                  return (<option key={acct.Account_Number} value={acct.Account_Number}>{acct.Account_Type}</option>);\n                                                })\n                                              : \"Accounts loading..\"}\n                            </Input>\n                      </FormGroup>\n                      <FormGroup className=\"mb-3\">\n                        <InputGroup className=\"input-group-alternative\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"ni ni-credit-card\"  />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input  onChange={this.handleBalanceUpdate}\n                            placeholder=\"Amount in USD\"\n                            type=\"Amount\"\n                            autoComplete=\"Amount\"\n                            />\n                        </InputGroup>\n                      </FormGroup>\n\n                      <FormGroup className=\"mb-3\">\n                        <InputGroup>\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <Input addon type=\"checkbox\" aria-label=\"\" />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input placeholder=\"Check if recurring transfer\" />\n                        </InputGroup>\n                      </FormGroup>\n\n                      <div className=\"text-center\">\n                        <button type=\"submit\" className=\"btn btn-md btn-primary\" onClick={this.handleTransfer}>\n                          {buttonText}\n                        </button>\n                      </div>\n                      </Form>\n                  </div>\n                  </CardBody>\n                </Card>\n              </Col>\n          </div>\n    );\n  };\n}\n\n\nconst mapStateToProps = state => {\n  const { accounts, transfer } = state\n  return {\n      isFetching: accounts.isFetching,\n      accounts: accounts.items,\n      // transfer: transfer.items\n  }\n}\nconst mapDispatchToProps = dispatch => {\nreturn {\n    dispatch\n}\n}\nexport default connect(mapStateToProps)(InternalTransfer)\n\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/customer.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/accounts.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/transactions.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/actions/constants.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/filter.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/TableContainer.js",["291"],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Headers/Header.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/variables/charts.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/TransactionComp.js",["292","293","294","295","296","297","298","299","300"],"import React from 'react'\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport formatMoney from 'formatMoney'\nimport SimpleDateTime  from 'react-simple-timestamp-to-date';\n\nfunction getParsedDate(date){\n  date = String(date).split(' ');\n  var days = String(date[0]).split('-');\n  var hours = String(date[1]).split(':');\n  return [parseInt(days[0]), parseInt(days[1])-1, parseInt(days[2]), parseInt(hours[0]), parseInt(hours[1]), parseInt(hours[2])];\n}\n\nconst TransactionComp = ({\n    Acc_Number, Transaction_Type,Amount,Details, Transaction_Date\n}) => (         <div>\n                <Row className=\"mt-5\">\n                  <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n                    <Card className=\"shadow\">\n                      <CardHeader className=\"border-0\">\n                        <Row className=\"align-items-center\">\n                          <div className=\"col\">\n                            <h3 className=\"mb-0\">Recent transactions</h3>\n                          </div>\n                          <div className=\"col text-right\">\n                            <Button\n                              color=\"primary\"\n                              href=\"#pablo\"\n                              onClick={(e) => e.preventDefault()}\n                              size=\"sm\"\n                            >\n                              See all\n                            </Button>\n                          </div>\n                        </Row>\n                      </CardHeader>\n                      <Table className=\"align-items-center table-flush\" responsive>\n                        <thead className=\"thead-light\">\n                          <tr>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Description</th>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Amount</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <th scope=\"row\"><SimpleDateTime dateSeparator=\"-\" format=\"MYD\" timeSeparator=\":\" meridians=\"1\">{Transaction_Date}</SimpleDateTime></th>\n                            <td>{Details}</td>\n                            <td>{Transaction_Type}</td>\n                            <td>{Amount}</td>\n                          </tr>\n                        </tbody>\n                      </Table>\n                    </Card>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col lg=\"6\" xl=\"3\">\n                    <hr/>\n                  </Col>\n                </Row>\n                </div>\n    )\n\nexport default TransactionComp\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/AccountComp.js",["301","302","303","304","305","306","307","308","309","310"],"import React,{Component} from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nimport formatMoney from 'formatMoney'\nimport { fetchTransactions } from 'actions'\nimport TransactionComp from 'components/TransactionComp'\n\nclass AccountComp extends Component {\n\n\n    componentDidMount() {\n\n        const { dispatch,Account_Number } = this.props\n        dispatch(fetchTransactions(Account_Number));\n\n    }\n\n\n    render() {\n        const {  \n                 Account_Type,\n                 Account_Number,status,\n                 Balance } = this.props\n        return (\n          <div>\n          <Row>\n            <Col lg=\"8\" xl=\"8\">\n              <Card className=\"card-stats mb-8 mb-xl-0\">\n                <CardBody>\n                  <Row>\n                    <div className=\"col\">\n                      <CardTitle\n                        tag=\"h6\"\n                        className=\"text-uppercase text-muted mb-0\"\n                      >\n\n                      {status=='Inactive'\n                              ? <h2>Inactive</h2>\n                              : ''\n                      }\n                        <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                          <span className=\"h6 mb-0\">\n                           {`Account_Number/ ${Account_Number}`}-XXXXX\n                          </span>\n                        </h6>\n                        <h4 className=\"text-uppercase text-red ls-1 mb-1\">\n                        <span className=\"font-weight-bold mb-0\">\n                          {Account_Type}\n                        </span>\n                        </h4>\n                      </CardTitle>\n                      <br/>\n                      <span className=\"h4 font-weight-bold mb-0\">\n                      {` ${formatMoney(Balance)}`}\n                      </span>\n\n                    </div>\n                    <Col className=\"col-auto\">\n                      <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                        <i className=\"fas fa-calculator\" />\n                      </div>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <hr/>\n          {/* <Row>\n            <Col>\n            {transactions.transactions\n              ? transactions.transactions.map(transaction => {\n                  return (<TransactionComp key={transaction.Acc_Number} {...transaction} />);\n                })\n              : \"Loading...\"}\n\n            </Col>\n          </Row> */}\n          </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    const { transactions } = state\n    return {\n        isFetching: transactions.isFetching,\n        transactions: transactions.items\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatch\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountComp)\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/actions/index.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/actions/asyncActionCreators.js",["311"],"import { browserHistory } from 'react-router'\nimport {\n    requestLogin,\n    loginSuccessful,\n    loginFailed,\n    requestLogout,\n    logoutSuccessful,\n    invalidCreateCustomerRequest\n} from './actionCreators'\n\nimport * as actionTypes from './constants'\n\nimport { CALL_API } from '../middleware/api'\n\nconst validateLoginRequest = credentials => {\n    let result = {\n        isValid: true,\n        usernameValidationMessage: null,\n        passwordValidationMessage: null\n    }\n\n    if (!credentials.username) {\n        result.isValid = false\n        result.usernameValidationMessage = 'Username is required'\n    }\n\n    if (!credentials.password) {\n        result.isValid = false\n        result.passwordValidationMessage = 'Password is required'\n    }\n\n    return result\n}\n\nexport const attemptLogin = credentials => {\n    return dispatch => {\n        let validationResult = validateLoginRequest(credentials)\n\n        if (!validationResult.isValid) {\n            return Promise.resolve(dispatch(loginFailed(validationResult)))\n        }\n\n        dispatch(requestLogin(credentials))\n\n        dispatch(loginSuccessful())\n        browserHistory.push('/accounts')\n        return Promise.resolve()\n    }\n}\n\nexport const attemptLogout = () => {\n    return (dispatch) => {\n        dispatch(requestLogout())\n        dispatch(logoutSuccessful())\n        browserHistory.push('/')\n    }\n}\n\nexport const fetchAccounts = accountId => ({\n    [CALL_API]: {\n        types: [actionTypes.REQUEST_ACCOUNTS, actionTypes.RECEIVE_ACCOUNTS, actionTypes.REQUEST_ACCOUNTS_FAILURE],\n        endpoint: `/getAccounts/${accountId}`\n    }\n})\n\nexport const fetchCustomers = accountId => ({\n    [CALL_API]: {\n        types: [actionTypes.REQUEST_CUSTOMER, actionTypes.RECEIVE_CUSTOMER, actionTypes.REQUEST_CUSTOMER_FAILURE],\n        endpoint: `/getcustomer/${accountId}`\n    }\n})\n\nexport const fetchTransactions  = accountId => ({\n    [CALL_API]: {\n        types: [actionTypes.REQUEST_TRANSACTIONS, actionTypes.RECEIVE_TRANSACTIONS, actionTypes.REQUEST_TRANSACTIONS_FAILURE],\n        endpoint: `/getTransactions/${accountId}`\n    }\n})\n\nexport const fetchTransactions18  = accountId => ({\n    [CALL_API]: {\n        types: [actionTypes.REQUEST_TRANSACTIONS, actionTypes.RECEIVE_TRANSACTIONS, actionTypes.REQUEST_TRANSACTIONS_FAILURE],\n        endpoint: '/getPastTransactions/18months',\n        method: 'PUT',\n        data: { \"Account_Number\" : accountId }\n    }\n})\n\nexport const fetchTransactionsrange  = (accountId,range) => ({\n    [CALL_API]: {\n        types: [actionTypes.REQUEST_TRANSACTIONS, actionTypes.RECEIVE_TRANSACTIONS, actionTypes.REQUEST_TRANSACTIONS_FAILURE],\n        endpoint: '/getPastTransactions/range',\n        method: 'PUT',\n        data: { \"Account_Number\" : accountId,\"Range\":range }\n    }\n})\n\nexport const submitCreateCustomerRequest = (First_Name,Last_Name,Email,Password,Username,Total_Accounts)  => ({\n    [CALL_API]: {\n        types: [actionTypes.CREATE_CUSTOMER_REQUEST, actionTypes.CREATE_CUSTOMER_SUCCESS, actionTypes.CREATE_CUSTOMER_FAILED],\n        endpoint: '/CreateCustomer',\n        method: 'POST',\n        data: { \"First_Name\":First_Name,\"Last_Name\":Last_Name,\"Email\":Email,\"Password\":Password,\"Username\":Username,\"Total_Accounts\":Total_Accounts }\n    }\n})\n\nexport const submitCreateAccountRequest = (Customer_ID,Account_Type,Balance)  => ({\n    [CALL_API]: {\n        types: [actionTypes.CREATE_ACCOUNT_REQUEST, actionTypes.CREATE_ACCOUNT_SUCCESS, actionTypes.CREATE_ACCOUNT_FAILED],\n        endpoint: '/addAccount',\n        method: 'POST',\n        data: {\"Customer_ID\": Customer_ID, \"Account_Type\": Account_Type,\"Balance\":Balance}\n    }\n})\n\nexport const fetchAllCustomers = () => ({\n    [CALL_API]: {\n        types: [actionTypes.REQUEST_CUSTOMERS, actionTypes.RECEIVE_CUSTOMERS, actionTypes.REQUEST_CUSTOMERS_FAILURE],\n        endpoint: '/getcustomers'\n    }\n})\n\nexport const fetchInactiveAccounts = () => ({\n    [CALL_API]: {\n        types: [actionTypes.REQUEST_INACTIVE_ACCOUNT, actionTypes.RECEIVE_INACTIVE_ACCOUNT, actionTypes.REQUEST_INACTIVE_ACCOUNT_FAILURE],\n        endpoint: '/getInactiveAdmin'\n    }\n})\n\nexport const fetchActiveAccounts = () => ({\n    [CALL_API]: {\n        types: [actionTypes.REQUEST_ACTIVE_ACCOUNT, actionTypes.RECEIVE_ACTIVE_ACCOUNT, actionTypes.REQUEST_ACTIVE_ACCOUNT_FAILURE],\n        endpoint: '/getActiveAdmin'\n    }\n})\n\nexport const submitActivate = (Account_Num)  => ({\n    [CALL_API]: {\n        types: [actionTypes.ACTIVATE_ACCOUNT, actionTypes.ACTIVATE_ACCOUNT_SUCCESS, actionTypes.ACTIVATE_ACCOUNT_FAILED],\n        endpoint: '/approveAccount',\n        method: 'PUT',\n        data: {\"Account_Num\": Account_Num}\n    }\n})\n\nexport const submitDeactivate = (Account_Num)  => ({\n    [CALL_API]: {\n        types: [actionTypes.DEACTIVATE_ACCOUNT, actionTypes.DEACTIVATE_ACCOUNT_SUCCESS, actionTypes.DEACTIVATE_ACCOUNT_FAILED],\n        endpoint: '/closeAccount',\n        method: 'PUT',\n        data: {\"Account_Num\": Account_Num}\n    }\n})\n\nexport const submitRefund = (Account_Num,Amount)  => ({\n    [CALL_API]: {\n        types: [actionTypes.REFUND_ACCOUNT, actionTypes.REFUND_ACCOUNT_SUCCESS, actionTypes.REFUND_ACCOUNT_FAILED],\n        endpoint: '/refundAccount',\n        method: 'PUT',\n        data: {\"Account_Num\": Account_Num,\"Amount\":Amount}\n    }\n})\n\nexport const fundTransfer = (Source_Account_Num,Dest_Account_Num,Amount,Details)  => ({\n    [CALL_API]: {\n        types: [actionTypes.TRANSFER_ACCOUNT, actionTypes.TRANSFER_ACCOUNT_SUCCESS, actionTypes.TRANSFER_ACCOUNT_FAILED],\n        endpoint: '/transaction/transfer',\n        method: 'PUT',\n        data: {\"Source_Account_Num\": Source_Account_Num, \"Dest_Account_Num\": Dest_Account_Num, \"Amount\": Amount, \"Details\": Details}\n    }\n})\n\nexport const extTransfer = (Source_Account_Num,Dest_Account_Num,Amount,Details)  => ({\n    [CALL_API]: {\n        types: [actionTypes.EXT_TRANSFER_ACCOUNT, actionTypes.EXT_TRANSFER_ACCOUNT_SUCCESS, actionTypes.EXT_TRANSFER_ACCOUNT_FAILED],\n        endpoint: '/transaction/send',\n        method: 'PUT',\n        data: {\"Source_Account_Num\": Source_Account_Num, \"Dest_Account_Num\": Dest_Account_Num, \"Amount\": Amount, \"Details\": Details}\n    }\n})","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/actions/actionCreators.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/formatMoney.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/layouts/unauth.js",["312"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport UnAuthNavbar from \"components/Navbars/UnAuthNavbar.js\";\nimport UnAuthFooter from \"components/Footers/UnAuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nconst Unauth = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.body.classList.add(\"bg-default\");\n    return () => {\n      document.body.classList.remove(\"bg-default\");\n    };\n  }, []);\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/unauth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"main-content\" ref={mainContent}>\n        <UnAuthNavbar />\n        <div className=\"header bg-gradient-warning py-7 py-lg-8\">\n  \n          <div className=\"separator separator-bottom separator-skew zindex-100\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"none\"\n              version=\"1.1\"\n              viewBox=\"0 0 2560 100\"\n              x=\"0\"\n              y=\"0\"\n            >\n              <polygon\n                className=\"fill-default\"\n                points=\"2560 0 2560 100 0 100\"\n              />\n            </svg>\n          </div>\n        </div>\n        {/* Page content */}\n        <Container className=\"mt--8 pb-5\">\n          <Row className=\"justify-content-center\">\n            <Switch>\n              {getRoutes(routes)}\n              <Redirect from=\"*\" to=\"/unauth/login\" />\n            </Switch>\n          </Row>\n        </Container>\n      </div>\n      <UnAuthFooter />\n    </>\n  );\n};\n\nexport default Unauth;\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Navbars/UnAuthNavbar.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/components/Footers/UnAuthFooter.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/getCustomer.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/ManageAccount.js",["313","314","315","316","317","318","319","320","321","322"],"import React from \"react\";\nimport { connect } from 'react-redux'\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Col,Label\n} from \"reactstrap\";\n\nimport { submitActivate,submitDeactivate, fetchActiveAccounts, fetchInactiveAccounts } from 'actions'\nimport accounts from \"reducers/accounts\";\n\nclass MangeAccount extends React.Component{\n   \n  componentDidMount() {\n    const { dispatch, authenticated, getInactiveAccounts, getActiveAccounts } = this.props\n    dispatch(fetchInactiveAccounts());\n    dispatch(fetchActiveAccounts());\n}\n\n    constructor(props) {\n      super(props);\n      this.state = {Account_Number:\"\", \n                    everFocusedAccountType: false,\n                    inFocus: \"\"\n    }\n\n      this.handleActiveAccNumberUpdate = this.handleActiveAccNumberUpdate.bind(this);\n      this.handleInactiveAccNumberUpdate = this.handleInactiveAccNumberUpdate.bind(this);\n\n      this.handleRefreshActive = this.handleRefreshActive.bind(this);\n      this.handleRefreshInActive = this.handleRefreshInActive.bind(this);\n\n      this.handleSubmitActivate = this.handleSubmitActivate.bind(this);\n      this.handleSubmitDeactivate = this.handleSubmitDeactivate.bind(this);\n    }\n\n  handleSubmitActivate(event) {\n    const { dispatch, getInactiveAccounts } = this.props\n\n    event.preventDefault();\n\n    let Account_Number = this.state.Account_Number\n    \n    dispatch(submitActivate(Account_Number));\n    \n    alert(Account_Number+' activated successfully!');\n\n  }\n\n  handleSubmitDeactivate(event) {\n    const { dispatch, getInactiveAccounts } = this.props\n\n    event.preventDefault();\n\n    let Account_Number = this.state.Account_Number\n    \n    dispatch(submitDeactivate(Account_Number));\n\n    alert(Account_Number+' de-activated successfully!');\n\n  }\n\n  handleRefreshActive(event){\n    const { dispatch, getActiveAccounts } = this.props\n\n    event.preventDefault();\n\n    dispatch(fetchActiveAccounts());\n  }\n\n  handleRefreshInActive(event){\n    const { dispatch, getInactiveAccounts } = this.props\n\n    event.preventDefault();\n\n    dispatch(fetchInactiveAccounts());\n\n  }\n\n\thandleActiveAccNumberUpdate = (evt) => {\n\t\tthis.setState({Account_Number: evt.target.value});\n\t}\n\n  handleInactiveAccNumberUpdate = (evt) => {\n\t\tthis.setState({Account_Number: evt.target.value});\n\t}\n\n    render() {\n        const { getInactiveAccounts, getActiveAccounts } = this.props\n   \n        return (\n          <Col lg=\"5\" md=\"7\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader>\n              <large>Manage Accounts</large>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n            <div className=\"text-center text-muted mb-4\">\n              <Form role=\"form\" id='regForm'>\n                  <FormGroup>\n                        <Label for=\"exampleSelect\">Inactive accounts</Label>\n                        <Input type=\"select\"  name=\"select\" id=\"exampleSelect\" value={this.state.Account_Number} onChange={this.handleInactiveAccNumberUpdate}>\n                         {getInactiveAccounts.accounts\n                                      ? getInactiveAccounts.accounts.map(acct => {\n                                          return (<option key={acct.Account_Number} value={acct.Account_Number}>{acct.Account_Number}</option>);\n                                        })\n                                      : \"Accounts loading..\"}\n                        \n                        </Input>\n                      </FormGroup>\n\n                  <div className=\"text-center\">\n                    <button type=\"submit\" className=\"btn btn-md btn-success\" onClick={this.handleSubmitActivate}>\n                      Activate\n                    </button>\n                    <button type=\"submit\" className=\"btn btn-md btn-info\" onClick={this.handleRefreshInActive}>\n                      Refresh\n                    </button>\n                  </div>\n                  <br/>\n                  <FormGroup>\n                        <Label for=\"exampleSelect\">Active accounts</Label>\n                        <Input type=\"select\"  name=\"select\" id=\"exampleSelect\" value={this.state.Account_Number} onChange={this.handleActiveAccNumberUpdate}>\n                         {getActiveAccounts.accounts\n                                      ? getActiveAccounts.accounts.map(acct => {\n                                          return (<option key={acct.Account_Number} value={acct.Account_Number}>{acct.Account_Number}</option>);\n                                        })\n                                      : \"Accounts loading..\"}\n                        \n                        </Input>\n                  </FormGroup>                      \n                  <button type=\"submit\" className=\"btn btn-md btn-warning\" onClick={this.handleSubmitDeactivate}>\n                      Close\n                    </button>\n                  <button type=\"submit\" className=\"btn btn-md btn-info\" onClick={this.handleRefreshActive}>\n                      Refresh\n                    </button>  \n                </Form>\n\t\n            </div>\n            </CardBody>\n          </Card>\n        </Col>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const { getInactiveAccounts, getActiveAccounts } = state\n    return {\n        isFetching: getInactiveAccounts.isFetching,\n        getActiveAccounts: getActiveAccounts.items,\n        getInactiveAccounts: getInactiveAccounts.items\n\n    }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n      dispatch\n  }\n}\nexport default connect(mapStateToProps)(MangeAccount)\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Profile.js",["323","324","325","326"],"\nimport React, { Component } from 'react'\nimport AccountComp from 'components/AccountComp'\nimport { connect } from 'react-redux'\nimport { fetchAccounts,fetchCustomers } from 'actions'\nimport {\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  Col, Label\n} from \"reactstrap\";\n\nconst style = {\n    float: 'right'\n}\n\nclass Profile extends Component {\n\n    componentDidMount() {\n\n        const { dispatch, authenticated } = this.props\n        const custid = '750f7a8b-5d4f-4621-92f3-2b4d0d031532';\n        dispatch(fetchCustomers(custid));\n    }\n\n\n    render() {\n        const { getCustomer } = this.props\n\n\n        return (\n                <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n                  <Container fluid>\n                      <Row>\n                        <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n                        <Card className=\"bg-gradient-default shadow\">\n                            <CardHeader className=\"bg-transparent\">\n                              <Row className=\"align-items-center\">\n                                <Col>\n                                        <Row>\n                                        <h4 className=\"text-white mb-0\">\n                                          <i className=\"ni ni-circle-08\" /> &nbsp;\n                                          <Label>Firstname</Label>\n                                        </h4>\n                                        </Row>\n                                </Col>\n                                <Col>\n                                        <Row>\n                                          <h4 className=\"text-white mb-0\">\n                                          {getCustomer.customer\n                                            ? getCustomer.customer.map(cust => {\n                                                return (<Label>{cust.First_Name}</Label>);\n                                              })\n                                            : \"Username loading..\"}\n                                        </h4>\n                                        </Row>\n                                </Col>\n                              </Row>\n                            </CardHeader>\n                          </Card>\n                          <Card className=\"bg-gradient-warning shadow\">\n                            <CardHeader className=\"bg-transparent\">\n                              <Row className=\"align-items-center\">\n                                <Col>\n                                        <Row>\n                                        <h4 className=\"text-white mb-0\">\n                                        <i className=\"ni ni-circle-08\" /> &nbsp;\n                                          <Label>Lastname</Label>\n                                        </h4>\n                                        </Row>\n                                </Col>\n                                <Col>\n                                        <Row>\n                                          <h4 className=\"text-white mb-0\">\n                                          {getCustomer.customer\n                                            ? getCustomer.customer.map(cust => {\n                                                return (<Label>{cust.Last_Name}</Label>);\n                                              })\n                                            : \"Username loading..\"}\n                                        </h4>\n                                        </Row>\n                                </Col>\n                              </Row>\n                            </CardHeader>\n                          </Card>\n                          <Card className=\"bg-gradient-warning shadow\">\n                            <CardHeader className=\"bg-transparent\">\n                              <Row className=\"align-items-center\">\n                                <Col>\n                                        <Row>\n                                        <h4 className=\"text-white mb-0\">\n                                        <i className=\"ni ni-badge\" /> &nbsp;\n                                          <Label>Username</Label>\n                                        </h4>\n                                        </Row>\n                                </Col>\n                                <Col>\n                                        <Row>\n                                          <h4 className=\"text-white mb-0\">\n                                          {getCustomer.customer\n                                            ? getCustomer.customer.map(cust => {\n                                                return (<Label>{cust.Username}</Label>);\n                                              })\n                                            : \"Username loading..\"}\n                                        </h4>\n                                        </Row>\n                                </Col>\n                              </Row>\n                            </CardHeader>\n                          </Card>\n                          <Card className=\"bg-gradient-warning shadow\">\n                            <CardHeader className=\"bg-transparent\">\n                              <Row className=\"align-items-center\">\n                                <Col>\n                                        <Row>\n                                        <h4 className=\"text-white mb-0\">\n                                        <i className=\"ni ni-email-83\" /> &nbsp;\n                                          <Label>Email</Label>\n                                        </h4>\n                                        </Row>\n                                </Col>\n                                <Col>\n                                        <Row>\n                                          <h4 className=\"text-white mb-0\">\n                                          {getCustomer.customer\n                                            ? getCustomer.customer.map(cust => {\n                                                return (<Label>{cust.Email}</Label>);\n                                              })\n                                            : \"Username loading..\"}\n                                        </h4>\n                                        </Row>\n                                </Col>\n                              </Row>\n                            </CardHeader>\n                          </Card>\n                          <Card className=\"bg-gradient-default shadow\">\n                            <CardHeader className=\"bg-transparent\">\n                              <Row className=\"align-items-center\">\n                                <Col>\n                                        <Row>\n                                        <h4 className=\"text-white mb-0\">\n                                        <i className=\"ni ni-bullet-list-67\" /> &nbsp;\n                                          <Label>Total_Accounts</Label>\n                                        </h4>\n                                        </Row>\n                                </Col>\n                                <Col>\n                                        <Row>\n                                          <h4 className=\"text-white mb-0\">\n                                          {getCustomer.customer\n                                            ? getCustomer.customer.map(cust => {\n                                                return (<Label>{cust.Total_Accounts}</Label>);\n                                              })\n                                            : \"Username loading..\"}\n                                        </h4>\n                                        </Row>\n                                </Col>\n                              </Row>\n                            </CardHeader>\n                          </Card>\n                        </Col>\n                      </Row>\n                      <br/><br/><br/><br/>\n                  </Container>\n                </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    const { getCustomer } = state\n    return {\n        isFetching: getCustomer.isFetching,\n        getCustomer:getCustomer.items\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatch\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/views/examples/Transactions.js",["327","328","329","330","331","332","333","334","335","336","337","338"],"\nimport React, { Component, forwardRef} from 'react'\nimport MaterialTable from 'material-table'\nimport { connect } from 'react-redux'\nimport { fetchAccounts, fetchTransactions, fetchTransactions18, fetchTransactionsrange } from 'actions'\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Label,\n  Container,\n  Row,\n  Col,\n  InputGroup, InputGroupAddon, InputGroupText\n} from \"reactstrap\";\n\n\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\n\nconst style = {\n  float: 'right'\n}\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\nclass Transactions extends Component {\n\n    componentDidMount() {\n\n        const { dispatch, authenticated, accounts } = this.props\n\n        const custid = '750f7a8b-5d4f-4621-92f3-2b4d0d031532';\n        dispatch(fetchAccounts(custid));\n\n    }\n\n    constructor(props) {\n      super(props);\n      this.state = {value: 'Checking', range:1};\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleRangeChange = this.handleRangeChange.bind(this);\n      this.handleSubmitAll = this.handleSubmitAll.bind(this);\n      this.handleSubmit18 = this.handleSubmit18.bind(this);\n      this.handleSubmitRange = this.handleSubmitRange.bind(this);\n\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleRangeChange(event) {\n      this.setState({range: event.target.value});\n    }\n\n    handleSubmitAll(event) {\n      const { dispatch, authenticated, accounts } = this.props\n\n      dispatch(fetchTransactions(this.state.value)); \n      event.preventDefault();\n    }\n\n    handleSubmit18(event) {\n      const { dispatch, authenticated, accounts } = this.props\n \n      dispatch(fetchTransactions18(this.state.value)); \n      event.preventDefault();\n    }\n\n    handleSubmitRange(event) {\n      const { dispatch, authenticated, accounts } = this.props\n\n      dispatch(fetchTransactionsrange(this.state.value, this.state.range)); \n      event.preventDefault();\n    }\n\n    render() {\n        const { getCustomer,transactions, accounts } = this.props\n        \n        const buttonText1 = 'All';\n        const buttonText2 = 'Past 18 months';\n        const buttonText3 = 'View';\n        \n        const columns = [\n          { title: \"Account\", field: \"Account_Type\" },\n          { title: \"Transaction Type\", field: \"Transaction_Type\" },\n          { title: \"Date\", field: \"Transaction_Date\" }, \n          { title: \"Amount\", field: 'Amount', }\n        ] \n\n        return (\n                <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n                  <Container fluid>\n\n                        <Row>\n                        <Col>\n                          <Card className=\"bg-gradient-default shadow\">\n                            <CardHeader className=\"bg-transparent\">\n                              <Row className=\"align-items-center\">\n                                <div className=\"col\">\n                                  <h3 className=\"text-white mb-0\">\n                                    Transactions Summary\n                                  </h3>\n                                </div>\n                              </Row>\n                            </CardHeader>\n                          </Card>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col>\n                            <Card className=\"bg-secondary shadow border-0\">\n                               <CardBody className=\"px-lg-5 py-lg-5\">\n                                  <Form>\n                                    <FormGroup>\n                                      <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={this.handleChange}>\n                                        {accounts.accounts\n                                          ? accounts.accounts.map(acct => {\n                                              return (<option key={acct.Account_Number} value={acct.Account_Number}>{acct.Account_Type}</option>);\n                                            })\n                                          : \"Accounts loading..\"}\n                                      </Input>\n                                    </FormGroup>\n                                    <div className=\"text-center\">\n                                      <button type=\"submit\" className=\"btn btn-md btn-primary\" onClick={this.handleSubmitAll}>\n                                        {buttonText1}\n                                      </button>\n                                      <button type=\"submit\" className=\"btn btn-md btn-warning\" onClick={this.handleSubmit18}>\n                                        {buttonText2}\n                                      </button>\n                                      <InputGroup className=\"py-sm-3\">\n                                        <InputGroupAddon addonType=\"prepend\">\n                                          <InputGroupText>@</InputGroupText>\n                                        </InputGroupAddon>\n                                        <Input placeholder=\"Enter how many months\" onChange={this.handleRangeChange} />\n                                      </InputGroup>\n                                      <button type=\"submit\" className=\"btn btn-md btn-info\" onClick={this.handleSubmitRange}>\n                                        {buttonText3}\n                                      </button>\n                                    </div>\n                                    </Form>\n                                </CardBody>\n                              </Card>\n                        </Col>\n                      </Row>\n                      <br/>\n                      <Row>\n                        <Col>\n                        <Card className=\"h5 bg-gradient-white shadow\">\n                          <CardHeader>\n                                <MaterialTable\n                                  title=\"\"\n                                  data={transactions.transactions}\n                                  columns={columns}\n                                  icons={tableIcons}\n                                  \n                                />\n                          </CardHeader>\n                        </Card>\n                        </Col>\n                      </Row>\n                  </Container>\n                </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    const { transactions, getCustomer, login, accounts } = state\n    return {\n        isFetching: transactions.isFetching,\n        transactions: transactions.items,\n        getCustomer:getCustomer.items,\n        accounts: accounts.items\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatch\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions)\n","/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/getActiveAccounts.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/getCustomers.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/transactionsrange.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/transactions18.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/getInactiveAccounts.js",[],"/Users/sudha_arul/Desktop/team-project-team5/frontend/src/reducers/transfer.js",[],{"ruleId":"339","severity":1,"message":"340","line":18,"column":16,"nodeType":"341","messageId":"342","endLine":18,"endColumn":25},{"ruleId":"339","severity":1,"message":"343","line":21,"column":26,"nodeType":"341","messageId":"342","endLine":21,"endColumn":29},{"ruleId":"339","severity":1,"message":"344","line":18,"column":8,"nodeType":"341","messageId":"342","endLine":18,"endColumn":13},{"ruleId":"339","severity":1,"message":"345","line":26,"column":3,"nodeType":"341","messageId":"342","endLine":26,"endColumn":7},{"ruleId":"339","severity":1,"message":"346","line":27,"column":3,"nodeType":"341","messageId":"342","endLine":27,"endColumn":12},{"ruleId":"339","severity":1,"message":"347","line":28,"column":3,"nodeType":"341","messageId":"342","endLine":28,"endColumn":18},{"ruleId":"339","severity":1,"message":"348","line":29,"column":3,"nodeType":"341","messageId":"342","endLine":29,"endColumn":17},{"ruleId":"339","severity":1,"message":"349","line":30,"column":3,"nodeType":"341","messageId":"342","endLine":30,"endColumn":8},{"ruleId":"339","severity":1,"message":"350","line":31,"column":3,"nodeType":"341","messageId":"342","endLine":31,"endColumn":13},{"ruleId":"351","severity":1,"message":"352","line":36,"column":1,"nodeType":"353","endLine":76,"endColumn":2},{"ruleId":"339","severity":1,"message":"354","line":6,"column":3,"nodeType":"341","messageId":"342","endLine":6,"endColumn":9},{"ruleId":"339","severity":1,"message":"355","line":22,"column":23,"nodeType":"341","messageId":"342","endLine":22,"endColumn":36},{"ruleId":"339","severity":1,"message":"356","line":22,"column":38,"nodeType":"341","messageId":"342","endLine":22,"endColumn":47},{"ruleId":"339","severity":1,"message":"357","line":43,"column":23,"nodeType":"341","messageId":"342","endLine":43,"endColumn":30},{"ruleId":"339","severity":1,"message":"358","line":68,"column":17,"nodeType":"341","messageId":"342","endLine":68,"endColumn":25},{"ruleId":"339","severity":1,"message":"355","line":68,"column":27,"nodeType":"341","messageId":"342","endLine":68,"endColumn":40},{"ruleId":"339","severity":1,"message":"357","line":68,"column":56,"nodeType":"341","messageId":"342","endLine":68,"endColumn":63},{"ruleId":"339","severity":1,"message":"359","line":137,"column":7,"nodeType":"341","messageId":"342","endLine":137,"endColumn":25},{"ruleId":"339","severity":1,"message":"360","line":34,"column":3,"nodeType":"341","messageId":"342","endLine":34,"endColumn":11},{"ruleId":"339","severity":1,"message":"361","line":19,"column":8,"nodeType":"341","messageId":"342","endLine":19,"endColumn":16},{"ruleId":"339","severity":1,"message":"354","line":23,"column":3,"nodeType":"341","messageId":"342","endLine":23,"endColumn":9},{"ruleId":"339","severity":1,"message":"362","line":33,"column":3,"nodeType":"341","messageId":"342","endLine":33,"endColumn":6},{"ruleId":"339","severity":1,"message":"363","line":14,"column":7,"nodeType":"341","messageId":"342","endLine":14,"endColumn":12},{"ruleId":"339","severity":1,"message":"355","line":22,"column":27,"nodeType":"341","messageId":"342","endLine":22,"endColumn":40},{"ruleId":"339","severity":1,"message":"364","line":74,"column":36,"nodeType":"341","messageId":"342","endLine":74,"endColumn":41},{"ruleId":"339","severity":1,"message":"354","line":23,"column":3,"nodeType":"341","messageId":"342","endLine":23,"endColumn":9},{"ruleId":"339","severity":1,"message":"365","line":25,"column":3,"nodeType":"341","messageId":"342","endLine":25,"endColumn":13},{"ruleId":"339","severity":1,"message":"362","line":33,"column":3,"nodeType":"341","messageId":"342","endLine":33,"endColumn":6},{"ruleId":"339","severity":1,"message":"355","line":43,"column":23,"nodeType":"341","messageId":"342","endLine":43,"endColumn":36},{"ruleId":"339","severity":1,"message":"366","line":43,"column":38,"nodeType":"341","messageId":"342","endLine":43,"endColumn":46},{"ruleId":"339","severity":1,"message":"367","line":43,"column":47,"nodeType":"341","messageId":"342","endLine":43,"endColumn":58},{"ruleId":"339","severity":1,"message":"367","line":167,"column":21,"nodeType":"341","messageId":"342","endLine":167,"endColumn":32},{"ruleId":"339","severity":1,"message":"359","line":174,"column":7,"nodeType":"341","messageId":"342","endLine":174,"endColumn":25},{"ruleId":"339","severity":1,"message":"354","line":6,"column":3,"nodeType":"341","messageId":"342","endLine":6,"endColumn":9},{"ruleId":"339","severity":1,"message":"355","line":21,"column":23,"nodeType":"341","messageId":"342","endLine":21,"endColumn":36},{"ruleId":"339","severity":1,"message":"368","line":21,"column":38,"nodeType":"341","messageId":"342","endLine":21,"endColumn":55},{"ruleId":"339","severity":1,"message":"369","line":21,"column":56,"nodeType":"341","messageId":"342","endLine":21,"endColumn":62},{"ruleId":"339","severity":1,"message":"369","line":113,"column":13,"nodeType":"341","messageId":"342","endLine":113,"endColumn":19},{"ruleId":"339","severity":1,"message":"359","line":120,"column":7,"nodeType":"341","messageId":"342","endLine":120,"endColumn":25},{"ruleId":"339","severity":1,"message":"361","line":19,"column":8,"nodeType":"341","messageId":"342","endLine":19,"endColumn":16},{"ruleId":"339","severity":1,"message":"354","line":23,"column":3,"nodeType":"341","messageId":"342","endLine":23,"endColumn":9},{"ruleId":"339","severity":1,"message":"365","line":25,"column":3,"nodeType":"341","messageId":"342","endLine":25,"endColumn":13},{"ruleId":"339","severity":1,"message":"362","line":33,"column":3,"nodeType":"341","messageId":"342","endLine":33,"endColumn":6},{"ruleId":"339","severity":1,"message":"354","line":6,"column":3,"nodeType":"341","messageId":"342","endLine":6,"endColumn":9},{"ruleId":"339","severity":1,"message":"362","line":16,"column":3,"nodeType":"341","messageId":"342","endLine":16,"endColumn":6},{"ruleId":"339","severity":1,"message":"358","line":38,"column":13,"nodeType":"341","messageId":"342","endLine":38,"endColumn":21},{"ruleId":"339","severity":1,"message":"355","line":38,"column":23,"nodeType":"341","messageId":"342","endLine":38,"endColumn":36},{"ruleId":"339","severity":1,"message":"370","line":38,"column":38,"nodeType":"341","messageId":"342","endLine":38,"endColumn":46},{"ruleId":"339","severity":1,"message":"371","line":39,"column":7,"nodeType":"341","messageId":"342","endLine":39,"endColumn":34},{"ruleId":"339","severity":1,"message":"372","line":40,"column":7,"nodeType":"341","messageId":"342","endLine":40,"endColumn":33},{"ruleId":"339","severity":1,"message":"373","line":41,"column":7,"nodeType":"341","messageId":"342","endLine":41,"endColumn":37},{"ruleId":"339","severity":1,"message":"374","line":42,"column":7,"nodeType":"341","messageId":"342","endLine":42,"endColumn":34},{"ruleId":"339","severity":1,"message":"375","line":43,"column":7,"nodeType":"341","messageId":"342","endLine":43,"endColumn":42},{"ruleId":"339","severity":1,"message":"358","line":120,"column":17,"nodeType":"341","messageId":"342","endLine":120,"endColumn":25},{"ruleId":"339","severity":1,"message":"355","line":120,"column":27,"nodeType":"341","messageId":"342","endLine":120,"endColumn":40},{"ruleId":"339","severity":1,"message":"370","line":120,"column":42,"nodeType":"341","messageId":"342","endLine":120,"endColumn":50},{"ruleId":"339","severity":1,"message":"371","line":121,"column":9,"nodeType":"341","messageId":"342","endLine":121,"endColumn":36},{"ruleId":"339","severity":1,"message":"372","line":122,"column":9,"nodeType":"341","messageId":"342","endLine":122,"endColumn":35},{"ruleId":"339","severity":1,"message":"373","line":123,"column":9,"nodeType":"341","messageId":"342","endLine":123,"endColumn":39},{"ruleId":"339","severity":1,"message":"374","line":124,"column":9,"nodeType":"341","messageId":"342","endLine":124,"endColumn":36},{"ruleId":"339","severity":1,"message":"375","line":125,"column":9,"nodeType":"341","messageId":"342","endLine":125,"endColumn":44},{"ruleId":"339","severity":1,"message":"359","line":269,"column":7,"nodeType":"341","messageId":"342","endLine":269,"endColumn":25},{"ruleId":"339","severity":1,"message":"354","line":23,"column":3,"nodeType":"341","messageId":"342","endLine":23,"endColumn":9},{"ruleId":"339","severity":1,"message":"365","line":25,"column":3,"nodeType":"341","messageId":"342","endLine":25,"endColumn":13},{"ruleId":"339","severity":1,"message":"362","line":33,"column":3,"nodeType":"341","messageId":"342","endLine":33,"endColumn":6},{"ruleId":"339","severity":1,"message":"376","line":39,"column":8,"nodeType":"341","messageId":"342","endLine":39,"endColumn":16},{"ruleId":"339","severity":1,"message":"355","line":44,"column":23,"nodeType":"341","messageId":"342","endLine":44,"endColumn":36},{"ruleId":"339","severity":1,"message":"366","line":44,"column":38,"nodeType":"341","messageId":"342","endLine":44,"endColumn":46},{"ruleId":"339","severity":1,"message":"377","line":44,"column":47,"nodeType":"341","messageId":"342","endLine":44,"endColumn":55},{"ruleId":"339","severity":1,"message":"377","line":168,"column":21,"nodeType":"341","messageId":"342","endLine":168,"endColumn":29},{"ruleId":"339","severity":1,"message":"359","line":175,"column":7,"nodeType":"341","messageId":"342","endLine":175,"endColumn":25},{"ruleId":"339","severity":1,"message":"378","line":19,"column":5,"nodeType":"341","messageId":"342","endLine":19,"endColumn":19},{"ruleId":"339","severity":1,"message":"379","line":6,"column":3,"nodeType":"341","messageId":"342","endLine":6,"endColumn":11},{"ruleId":"339","severity":1,"message":"380","line":7,"column":3,"nodeType":"341","messageId":"342","endLine":7,"endColumn":12},{"ruleId":"339","severity":1,"message":"381","line":8,"column":3,"nodeType":"341","messageId":"342","endLine":8,"endColumn":10},{"ruleId":"339","severity":1,"message":"382","line":9,"column":3,"nodeType":"341","messageId":"342","endLine":9,"endColumn":10},{"ruleId":"339","severity":1,"message":"383","line":10,"column":3,"nodeType":"341","messageId":"342","endLine":10,"endColumn":6},{"ruleId":"339","severity":1,"message":"360","line":11,"column":3,"nodeType":"341","messageId":"342","endLine":11,"endColumn":11},{"ruleId":"339","severity":1,"message":"384","line":13,"column":3,"nodeType":"341","messageId":"342","endLine":13,"endColumn":12},{"ruleId":"339","severity":1,"message":"385","line":17,"column":8,"nodeType":"341","messageId":"342","endLine":17,"endColumn":19},{"ruleId":"339","severity":1,"message":"386","line":20,"column":10,"nodeType":"341","messageId":"342","endLine":20,"endColumn":23},{"ruleId":"339","severity":1,"message":"354","line":5,"column":3,"nodeType":"341","messageId":"342","endLine":5,"endColumn":9},{"ruleId":"339","severity":1,"message":"365","line":7,"column":3,"nodeType":"341","messageId":"342","endLine":7,"endColumn":13},{"ruleId":"339","severity":1,"message":"381","line":10,"column":3,"nodeType":"341","messageId":"342","endLine":10,"endColumn":10},{"ruleId":"339","severity":1,"message":"382","line":11,"column":3,"nodeType":"341","messageId":"342","endLine":11,"endColumn":10},{"ruleId":"339","severity":1,"message":"383","line":12,"column":3,"nodeType":"341","messageId":"342","endLine":12,"endColumn":6},{"ruleId":"339","severity":1,"message":"360","line":13,"column":3,"nodeType":"341","messageId":"342","endLine":13,"endColumn":11},{"ruleId":"339","severity":1,"message":"387","line":14,"column":3,"nodeType":"341","messageId":"342","endLine":14,"endColumn":8},{"ruleId":"339","severity":1,"message":"384","line":15,"column":3,"nodeType":"341","messageId":"342","endLine":15,"endColumn":12},{"ruleId":"339","severity":1,"message":"388","line":22,"column":8,"nodeType":"341","messageId":"342","endLine":22,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":53,"column":30,"nodeType":"391","messageId":"392","endLine":53,"endColumn":32},{"ruleId":"339","severity":1,"message":"393","line":8,"column":5,"nodeType":"341","messageId":"342","endLine":8,"endColumn":33},{"ruleId":"339","severity":1,"message":"343","line":21,"column":26,"nodeType":"341","messageId":"342","endLine":21,"endColumn":29},{"ruleId":"339","severity":1,"message":"354","line":6,"column":3,"nodeType":"341","messageId":"342","endLine":6,"endColumn":9},{"ruleId":"339","severity":1,"message":"394","line":17,"column":8,"nodeType":"341","messageId":"342","endLine":17,"endColumn":16},{"ruleId":"339","severity":1,"message":"355","line":22,"column":23,"nodeType":"341","messageId":"342","endLine":22,"endColumn":36},{"ruleId":"339","severity":1,"message":"395","line":22,"column":38,"nodeType":"341","messageId":"342","endLine":22,"endColumn":57},{"ruleId":"339","severity":1,"message":"368","line":22,"column":59,"nodeType":"341","messageId":"342","endLine":22,"endColumn":76},{"ruleId":"339","severity":1,"message":"395","line":45,"column":23,"nodeType":"341","messageId":"342","endLine":45,"endColumn":42},{"ruleId":"339","severity":1,"message":"395","line":58,"column":23,"nodeType":"341","messageId":"342","endLine":58,"endColumn":42},{"ruleId":"339","severity":1,"message":"368","line":71,"column":23,"nodeType":"341","messageId":"342","endLine":71,"endColumn":40},{"ruleId":"339","severity":1,"message":"395","line":79,"column":23,"nodeType":"341","messageId":"342","endLine":79,"endColumn":42},{"ruleId":"339","severity":1,"message":"359","line":164,"column":7,"nodeType":"341","messageId":"342","endLine":164,"endColumn":25},{"ruleId":"339","severity":1,"message":"396","line":3,"column":8,"nodeType":"341","messageId":"342","endLine":3,"endColumn":19},{"ruleId":"339","severity":1,"message":"397","line":5,"column":10,"nodeType":"341","messageId":"342","endLine":5,"endColumn":23},{"ruleId":"339","severity":1,"message":"363","line":14,"column":7,"nodeType":"341","messageId":"342","endLine":14,"endColumn":12},{"ruleId":"339","severity":1,"message":"355","line":22,"column":27,"nodeType":"341","messageId":"342","endLine":22,"endColumn":40},{"ruleId":"339","severity":1,"message":"398","line":13,"column":3,"nodeType":"341","messageId":"342","endLine":13,"endColumn":8},{"ruleId":"339","severity":1,"message":"363","line":39,"column":7,"nodeType":"341","messageId":"342","endLine":39,"endColumn":12},{"ruleId":"339","severity":1,"message":"355","line":68,"column":27,"nodeType":"341","messageId":"342","endLine":68,"endColumn":40},{"ruleId":"339","severity":1,"message":"366","line":68,"column":42,"nodeType":"341","messageId":"342","endLine":68,"endColumn":50},{"ruleId":"339","severity":1,"message":"355","line":96,"column":25,"nodeType":"341","messageId":"342","endLine":96,"endColumn":38},{"ruleId":"339","severity":1,"message":"366","line":96,"column":40,"nodeType":"341","messageId":"342","endLine":96,"endColumn":48},{"ruleId":"339","severity":1,"message":"355","line":103,"column":25,"nodeType":"341","messageId":"342","endLine":103,"endColumn":38},{"ruleId":"339","severity":1,"message":"366","line":103,"column":40,"nodeType":"341","messageId":"342","endLine":103,"endColumn":48},{"ruleId":"339","severity":1,"message":"355","line":110,"column":25,"nodeType":"341","messageId":"342","endLine":110,"endColumn":38},{"ruleId":"339","severity":1,"message":"366","line":110,"column":40,"nodeType":"341","messageId":"342","endLine":110,"endColumn":48},{"ruleId":"339","severity":1,"message":"399","line":117,"column":17,"nodeType":"341","messageId":"342","endLine":117,"endColumn":28},{"ruleId":"339","severity":1,"message":"364","line":208,"column":40,"nodeType":"341","messageId":"342","endLine":208,"endColumn":45},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Index' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'InputGroupText' is defined but never used.","'Input' is defined but never used.","'InputGroup' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'authenticated' is assigned a value but never used.","'customers' is assigned a value but never used.","'account' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used.","'Progress' is defined but never used.","'ReactDOM' is defined but never used.","'Row' is defined but never used.","'style' is assigned a value but never used.","'login' is assigned a value but never used.","'CardHeader' is defined but never used.","'accounts' is assigned a value but never used.","'extTransfer' is assigned a value but never used.","'getActiveAccounts' is assigned a value but never used.","'refund' is assigned a value but never used.","'customer' is assigned a value but never used.","'First_NameValidationMessage' is assigned a value but never used.","'Last_NameValidationMessage' is assigned a value but never used.","'Username_NameValidationMessage' is assigned a value but never used.","'Email_NameValidationMessage' is assigned a value but never used.","'TotalAccounts_NameValidationMessage' is assigned a value but never used.","'transfer' is defined but never used.","'transfer' is assigned a value but never used.","'visibleColumns' is assigned a value but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Nav' is defined but never used.","'Container' is defined but never used.","'formatMoney' is defined but never used.","'getParsedDate' is defined but never used.","'Table' is defined but never used.","'TransactionComp' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'invalidCreateCustomerRequest' is defined but never used.","'accounts' is defined but never used.","'getInactiveAccounts' is assigned a value but never used.","'AccountComp' is defined but never used.","'fetchAccounts' is defined but never used.","'Label' is defined but never used.","'getCustomer' is assigned a value but never used."]